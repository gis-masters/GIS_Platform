Feature: Проверка ручек валидности геометрии

  Background:
    Given Существует любая организация
    *     Владелец организации авторизован

  Scenario: Невозможно сохранить невалидную геометрию при создании фичи
    Given Существует схема "Тестовая схема с полем в верхнем регистре"
    *     Существует набор данных
    *     Существует таблица созданная по текущей схеме и с включённым FTS
    When  Пользователь пытается добавить сломанную геометрию в текущую таблицу
    Then  Сервер отвечает со статус-кодом 400
    And   сообщение об ошибке соответствует ожидаемому: "Геометрия содержит ошибки: Самопересечение: [1 1]"

  Scenario: Невозможно сохранить невалидную геометрию при редактировании фичи
    Given Существует схема "Тестовая схема с полем в верхнем регистре"
    *     Существует набор данных
    *     Существует таблица созданная по текущей схеме и с включённым FTS
    *     Пользователь добавляет случайный объект в текущую таблицу
    When  Пользователь пытается сломать геометрию добавленного объекта
    Then  Сервер отвечает со статус-кодом 400
    And   сообщение об ошибке соответствует ожидаемому: "Геометрия содержит ошибки: Координаты выходят за допустимые границы!!!"

  Scenario Outline: Проверка валидности геометрии работает правильно
    When  Пользователь спрашивает валидность объекта: "<inputGeometry>" с EPSG: "<epsg>"
    Then  Сервер отвечает со статус-кодом 200
    And   сообщение об ошибке соответствует ожидаемому: "<expectedMsg>"
    Examples:
      | expectedMsg                                                                                  | epsg | inputGeometry                                                                                                                                                                                                                                                      |
      | Самопересечение: [1 1]                                                                       | 3857 | \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0,0],[2,2],[0,2],[2,0],[0,0]]]}                                                                                                                                                                              |
      | IllegalArgumentException: Invalid number of points in LinearRing found 3 - must be 0 or >= 4 | 3857 | \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0,0],[1,1],[0,0]]]}                                                                                                                                                                                          |
      | Внутреннее кольцо лежит вне внешнего кольца: [5 5]                                           | 3857 | \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0,0],[4,0],[4,4],[0,4],[0,0]],[[5,5],[6,5],[6,6],[5,6],[5,5]]]}                                                                                                                                              |
      | Invalid Coordinate[1 nan]                                                                    | 3857 | \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0,0],[1,\"NaN\"],[1,1],[0,0]]]}                                                                                                                                                                              |
      | Valid Geometry                                                                               | 3857 | \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0,0],[0,4],[4,4],[4,0],[0,0]]]}                                                                                                                                                                              |
      | Координаты выходят за допустимые границы!!!                                                  | 7829 | \"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[-150162514487.67908,268047105300.4367],[85606667137.83588,262433553356.9721],[40698251590.11871,79993115194.37128],[-189457378091.9316,102447322968.22968],[-150162514487.67908,268047105300.4367]]]]} |

  Scenario Outline: Приведение невалидной геометрии к валидному виду проходит успешно "<explanation>"
    When  Пользователь просит сделать валидным объект: "<inputGeometry>"
    Then  Сервер возвращает валидный объект: "<outputGeometry>"
    Examples:
      | explanation                            | inputGeometry                                                                                                          | outputGeometry                                                                                                                                                                            |
      | Убрали самопресчение                   | \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0,0],[2,2],[0,2],[2,0],[0,0]]]}}                                 | \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [ 0.0, 2.0 ], [ 2.0, 2.0 ], [ 1.0, 1.0 ], [ 0.0, 2.0 ] ]]}                                                                          |
      | Убрали самопресчение                   | \"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[0,0],[2,2],[0,2],[2,0],[0,0]]]]}                           | \"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[ [ [ 0.0, 2.0 ], [ 2.0, 2.0 ], [ 1.0, 1.0 ], [ 0.0, 2.0 ] ] ], [ [ [ 2.0, 0.0 ], [ 0.0, 0.0 ], [ 1.0, 1.0 ], [ 2.0, 0.0 ] ] ]]} |
      | Вырезка ВНЕ полигона была удалена      | \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0,0],[4,0],[4,4],[0,4],[0,0]],[[5,5],[6,5],[6,6],[5,6],[5,5]]]}} | \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[ [ 4.0, 4.0 ], [ 4.0, 0.0 ], [ 0.0, 0.0 ], [ 0.0, 4.0 ], [ 4.0, 4.0 ] ]]}                                                            |
      | Без изменений потому что была валидной | \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.0,0.0],[0.0,4.0],[4.0,4.0],[4.0,0.0],[0.0,0.0]]]}}             | \"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[0.0,0.0],[0.0,4.0],[4.0,4.0],[4.0,0.0],[0.0,0.0]]]}}                                                                                |


  Scenario Outline: Приведение невалидной геометрии к валидному виду выбрасывает исключение "<explanation>"
    When  Пользователь просит сделать валидным объект: "<inputGeometry>"
    Then  Сервер отвечает со статус-кодом 400
    And   В ответе содержится сообщение об ошибке "<msg>"
    Examples:
      | explanation                                    | inputGeometry                                                                           | msg                                                                                                  |
      | Просили полигон, а получили линию (NaN)        | \"geometry\":{\"type\":\"Polygon\", \"coordinates\":[[[0,0],[1,\"NaN\"],[1,1],[0,0]]]}} | Невозможно исправить данную геометрию автоматически: Не получилось привести объект к геометрии слоя. |
      | Просили полигон, а получили линию (мало точек) | \"geometry\":{\"type\":\"Polygon\",  \"coordinates\":[[[0,0],[1,1],[0, 0]]]}}           | Невозможно исправить данную геометрию автоматически: Не получилось привести объект к геометрии слоя. |
