<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">http://10.10.10.58/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="scheme" elementType="Argument">
            <stringProp name="Argument.name">scheme</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="site" elementType="Argument">
            <stringProp name="Argument.name">site</stringProp>
            <stringProp name="Argument.value">10.10.10.58</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="project_name" elementType="Argument">
            <stringProp name="Argument.name">project_name</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userFields" elementType="Argument">
            <stringProp name="Argument.name">userFields</stringProp>
            <stringProp name="Argument.value">email,username,createdAt,surName,name,id</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="randomGUID" elementType="Argument">
            <stringProp name="Argument.name">randomGUID</stringProp>
            <stringProp name="Argument.value"></stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${site}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">false</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Create Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">10</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="org_counter" enabled="true">
          <stringProp name="CounterConfig.start">0</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">org_counter</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--CreateOrg Controller--" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createOrg" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;name&quot;: &quot;TestOrgName${org_counter}&quot;,&#xd;
    &quot;phone&quot;: &quot;123456789${org_counter}&quot;,&#xd;
    &quot;owner&quot;: {&#xd;
        &quot;name&quot;: &quot;TestOrgAdminName${org_counter}&quot;,&#xd;
        &quot;surName&quot;: &quot;TestOrgAdminSurName${org_counter}&quot;,&#xd;
        &quot;email&quot;: &quot;TestOrgAdmin${org_counter}@email.com&quot;,&#xd;
        &quot;password&quot;: &quot;testtestQ1&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${site}</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/organizations/init</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${host}register</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${site}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="false">
            <stringProp name="ConstantTimer.delay">1000</stringProp>
          </ConstantTimer>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--GetToken Controller--" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAdminToken" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">TestOrgAdmin0@email.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">testtestQ1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${site}</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="accessTokenExtractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">access_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">noAdminToken</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${host}login</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${site}</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getOrgId" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${site}</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/users/current</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="orgIdExtractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">orgId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.orgId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">noOrgId</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">${host}login</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${site}</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Jmeter test</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--Create all Controller--" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Create 100" enabled="true">
            <boolProp name="LoopController.continue_forever">true</boolProp>
            <stringProp name="LoopController.loops">10</stringProp>
          </LoopController>
          <hashTree>
            <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
              <collectionProp name="UserParameters.names">
                <stringProp name="115235276">randomGUID</stringProp>
              </collectionProp>
              <collectionProp name="UserParameters.thread_values">
                <collectionProp name="681405977">
                  <stringProp name="118040362">${__UUID()}</stringProp>
                </collectionProp>
              </collectionProp>
              <boolProp name="UserParameters.per_iteration">false</boolProp>
            </UserParameters>
            <hashTree/>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--CreateProject Controller--" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createProject" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&quot;projectName&quot;:&quot;Org${__threadNum}Project-${randomGUID}&quot;}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${site}</stringProp>
                <stringProp name="HTTPSampler.port">8100</stringProp>
                <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/projects</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${host}projects</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://${site}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Jmeter test</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id EXTRACTOR" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">project_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">noProjectId</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49587">201</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--AddBasemapsToProjectController--" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetAllBaseMap" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments"/>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/data/basemaps</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="EmptyMapIdExtractor" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">EmptyMap_id</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&apos;empty&apos;)].id</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">noImportId</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="OsmMapIdExtractor" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">OsmMap_id</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&apos;osm&apos;)].id</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">noImportId</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="EsriMapIdExtractor" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">EsriMap_id</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&apos;esri&apos;)].id</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">noImportId</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="EsriSpaceMapIdExtractor" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">EsriSpaceMap_id</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&apos;esriImagery&apos;)].id</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">noImportId</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="WmtsMapIdExtractor" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">WmtsMap_id</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.name==&apos;wmts&apos;)].id</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">noImportId</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addOSMBase" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;: &quot;Open street map&quot;,&#xd;
	&quot;baseMapId&quot;: &quot;${OsmMap_id}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/projects/${project_id}/basemaps</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addESRIBase" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;: &quot;ESRI&quot;,&#xd;
	&quot;baseMapId&quot;: &quot;${EsriMap_id}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/projects/${project_id}/basemaps</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addEmptyBase" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;: &quot;Без подложки&quot;,&#xd;
	&quot;baseMapId&quot;: &quot;${EmptyMap_id}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/projects/${project_id}/basemaps</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addESRISpaceBase" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;: &quot;ESRI Спутник&quot;,&#xd;
	&quot;baseMapId&quot;: &quot;${EsriSpaceMap_id}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/projects/${project_id}/basemaps</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addWMTSBase" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
	&quot;title&quot;: &quot;Ортофотоплан WMTS&quot;,&#xd;
	&quot;baseMapId&quot;: &quot;${WmtsMap_id}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/projects/${project_id}/basemaps</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
              <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--SHPImportController--" enabled="true">
                <boolProp name="TransactionController.includeTimers">false</boolProp>
                <boolProp name="TransactionController.parent">false</boolProp>
              </TransactionController>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="initImportSHP" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
   &quot;import&quot;:{&#xd;
      &quot;targetWorkspace&quot;:{&#xd;
         &quot;workspace&quot;:{&#xd;
            &quot;name&quot;:&quot;scratch_database_${orgId}&quot;&#xd;
         }&#xd;
      },&#xd;
      &quot;targetStore&quot;:{&#xd;
         &quot;dataStore&quot;:{&#xd;
            &quot;name&quot;:&quot;scratch_database_${orgId}_store&quot;&#xd;
         }&#xd;
      }&#xd;
   }&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/geoserver/rest/imports</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="importIdExtractor" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">import_id</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.import.id</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">noImportId</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="importDataSHP" enabled="true">
                  <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
                    <collectionProp name="HTTPFileArgs.files">
                      <elementProp name="/Users/fedorsetkov/Garbage/testArchive.zip" elementType="HTTPFileArg">
                        <stringProp name="File.path">/Users/fedorsetkov/Garbage/testArchive.zip</stringProp>
                        <stringProp name="File.paramname">filename</stringProp>
                        <stringProp name="File.mimetype">application/zip</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="name" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">file</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">name</stringProp>
                      </elementProp>
                      <elementProp name="Content-Disposition" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">form-data</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">Content-Disposition</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">application/zip</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">Content-Type</stringProp>
                        <stringProp name="HTTPArgument.content_type">application/zip</stringProp>
                      </elementProp>
                      <elementProp name="filename" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">&quot;testArchive.zip&quot;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                        <stringProp name="Argument.name">filename</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/geoserver/rest/imports/${import_id}/tasks</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
                  <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">true</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Connection" elementType="Header">
                        <stringProp name="Header.name">Connection</stringProp>
                        <stringProp name="Header.value">keep-alive</stringProp>
                      </elementProp>
                      <elementProp name="Content-Length" elementType="Header">
                        <stringProp name="Header.name">Content-Length</stringProp>
                        <stringProp name="Header.value">161392</stringProp>
                      </elementProp>
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${site}:8100</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="emptySHP" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/geoserver/rest/imports/${import_id}</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Connection" elementType="Header">
                        <stringProp name="Header.name">Connection</stringProp>
                        <stringProp name="Header.value">keep-alive</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${site}:8100</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Jmeter test</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(&quot;${import_status}&quot;!=&quot;COMPLETE&quot;)}</stringProp>
                </WhileController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetStatusImport" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${site}</stringProp>
                    <stringProp name="HTTPSampler.port">8100</stringProp>
                    <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/geoserver/rest/imports/${import_id}/tasks/0/progress</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                        </elementProp>
                        <elementProp name="Connection" elementType="Header">
                          <stringProp name="Header.name">Connection</stringProp>
                          <stringProp name="Header.value">keep-alive</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Host" elementType="Header">
                          <stringProp name="Header.name">Host</stringProp>
                          <stringProp name="Header.value">${site}:8100</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">${scheme}://${site}</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Jmeter test</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="importStatus" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">import_status</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.state</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">noImportstate</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">10000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetTableNameLayer" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">geoserver/rest/imports/${import_id}/tasks/0/layer</stringProp>
                  <stringProp name="HTTPSampler.method">GET</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Connection" elementType="Header">
                        <stringProp name="Header.name">Connection</stringProp>
                        <stringProp name="Header.value">keep-alive</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${site}:8100</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Jmeter test</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="TableNameLayer" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">table_name_layer</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$..nativeName</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">notablenamelayer</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="NullStatusImport" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">import_status</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs"></stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="importTasksSHP NEED TO CHANGE SHP" enabled="true">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&quot;importTasks&quot;:[{&quot;layerName&quot;:&quot;border7&quot;,&quot;pairs&quot;:[{&quot;source&quot;:{&quot;binding&quot;:&quot;org.locationtech.jts.geom.MultiPolygon&quot;,&quot;name&quot;:&quot;the_geom&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;shape&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;shape_area&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;shape_area&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;ruleid&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;ruleid&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Long&quot;,&quot;name&quot;:&quot;classid&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;classid&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Long&quot;,&quot;name&quot;:&quot;status_adm&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;STATUS_ADM&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;SHAPE_STAr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;SHAPE_STAr&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;SHAPE_STLe&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;SHAPE_STLe&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;name&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;name&quot;,&quot;type&quot;:&quot;FromSchema&quot;}}],&quot;schemaName&quot;:&quot;border&quot;,&quot;srs&quot;:28406,&quot;workTableName&quot;:&quot;border&quot;},{&quot;layerName&quot;:&quot;oks5&quot;,&quot;pairs&quot;:[{&quot;source&quot;:{&quot;binding&quot;:&quot;org.locationtech.jts.geom.MultiPolygon&quot;,&quot;name&quot;:&quot;the_geom&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;shape&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;CAD_NUM&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;cad_num&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;TypeOTI&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;TypeOTI&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Assignatio&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Assignatio&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Note&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Note&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Area&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Area&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;Doc_Date&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_Date&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Doc_Number&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_Number&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Doc_Organi&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_Organi&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;DateUpload&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;DateUpload&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Scr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Scr&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Cadastral_&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Cadastral_&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Apartment&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Apartment&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;City_Name&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;City_Name&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;City_Type&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;City_Type&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;District_N&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;District_N&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Code_Kladr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Code_Kladr&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Locality_N&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Locality_N&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Code_Okato&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Code_Okato&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Other&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Other&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Region&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Region&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Soviet_Vil&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Soviet_Vil&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Street_Typ&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Street_Typ&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Street&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Street&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Assignat_1&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Assignat_1&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Key_Parame&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Key_Parame&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Key_Para_1&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Key_Para_1&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;State&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;State&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Doc_FIO&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_FIO&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Integer&quot;,&quot;name&quot;:&quot;Del&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Del&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Shape_STAr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Shape_STAr&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Shape_STLe&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Shape_STLe&quot;,&quot;type&quot;:&quot;AsIs&quot;}}],&quot;schemaName&quot;:&quot;oks&quot;,&quot;srs&quot;:314314,&quot;workTableName&quot;:&quot;oks&quot;},{&quot;layerName&quot;:&quot;zu1&quot;,&quot;pairs&quot;:[{&quot;source&quot;:{&quot;binding&quot;:&quot;org.locationtech.jts.geom.MultiPolygon&quot;,&quot;name&quot;:&quot;the_geom&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;shape&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;CAD_NUM&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;cad_num&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Long&quot;,&quot;name&quot;:&quot;State&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;state&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Usage&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;usage&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Category&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;category&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Address_No&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Address_No&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Area&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Area&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Name&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Name&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;Date_Creat&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Date_Creat&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;Document_D&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Document_D&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Cost&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;cost&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;CS_Name&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;CS_Name&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;DateUpload&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;DateUpload&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;LandUse&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;LandUse&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;KLADR&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;KLADR&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;OKATO&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;OKATO&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Postal_Cod&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Postal_Cod&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Municipali&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Municipali&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Settlement&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Settlement&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Street_Typ&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Street_Typ&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Street&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Street&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Bld_Type&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Bld_Type&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Building&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Building&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;House_Type&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;House_Type&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;House&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;House&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Address_Ot&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Address_Ot&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Cad_Org&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Cad_Org&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Scr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Scr&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Kvartal&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Kvartal&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Anno_text&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;anno_text&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Integer&quot;,&quot;name&quot;:&quot;Del&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Del&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Shape_STAr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Shape_STAr&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Shape_STLe&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Shape_STLe&quot;,&quot;type&quot;:&quot;AsIs&quot;}}],&quot;schemaName&quot;:&quot;zu&quot;,&quot;srs&quot;:314314,&quot;workTableName&quot;:&quot;zu&quot;},{&quot;layerName&quot;:&quot;kvartal_kpt6&quot;,&quot;pairs&quot;:[{&quot;source&quot;:{&quot;binding&quot;:&quot;org.locationtech.jts.geom.MultiPolygon&quot;,&quot;name&quot;:&quot;the_geom&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;shape&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;DateUpload&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;DateUpload&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Scr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Scr&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;CAD_NUM&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;cad_num&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Cadastral_&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Cadastral_&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Aria_Total&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Aria_Total&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Appointmen&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Appointmen&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;FIO&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;FIO&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;Reg_Date&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Reg_Date&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Number&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Number&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Organizati&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Organizati&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Date_Text&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Date_Text&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Long&quot;,&quot;name&quot;:&quot;RuleID&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;ruleid&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Long&quot;,&quot;name&quot;:&quot;Del&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Del&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;SHAPE_STAr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;SHAPE_STAr&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;SHAPE_STLe&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;SHAPE_STLe&quot;,&quot;type&quot;:&quot;AsIs&quot;}}],&quot;schemaName&quot;:&quot;kvartal_kpt&quot;,&quot;srs&quot;:314314,&quot;workTableName&quot;:&quot;kvartal_kpt&quot;},{&quot;layerName&quot;:&quot;parcels_coordination6&quot;,&quot;pairs&quot;:[{&quot;source&quot;:{&quot;binding&quot;:&quot;org.locationtech.jts.geom.MultiPolygon&quot;,&quot;name&quot;:&quot;the_geom&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;shape&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;CAD_NUM&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;cad_num&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Anno_text&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;anno_text&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;Date_Creat&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Date_Creat&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Long&quot;,&quot;name&quot;:&quot;State&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;state&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Category&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;category&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Address_No&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Address_No&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Usage&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;usage&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;shape_area&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;shape_area&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Kvartal&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;kvartal&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Fio_owner&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;fio_owner&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Adr_owner&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;adr_owner&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Num_app&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;num_app&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;Date_app&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;date_app&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Long&quot;,&quot;name&quot;:&quot;Type_law&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;type_law&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Declarant&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;declarant&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Long&quot;,&quot;name&quot;:&quot;Type_land&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;type_land&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Num_decis&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;num_decis&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;Date_decis&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;date_decis&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Decision&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;decision&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Long&quot;,&quot;name&quot;:&quot;Stat_appr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;stat_appr&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Note&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;note&quot;,&quot;type&quot;:&quot;FromSchema&quot;}}],&quot;schemaName&quot;:&quot;parcels_coordination&quot;,&quot;srs&quot;:28406,&quot;workTableName&quot;:&quot;parcels_coordination&quot;},{&quot;layerName&quot;:&quot;zouit_kpt6&quot;,&quot;pairs&quot;:[{&quot;source&quot;:{&quot;binding&quot;:&quot;org.locationtech.jts.geom.MultiPolygon&quot;,&quot;name&quot;:&quot;the_geom&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;shape&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Account_Nu&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;account_number&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Descriptio&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;description&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Content_Re&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;content_restrictions&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Documents&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;documents&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Doc_Appoin&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_Appoin&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;Doc_Date&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;doc_date&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Doc_FIO&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_FIO&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Doc_Number&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_Number&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Doc_Organi&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_Organi&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;DateUpload&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;DateUpload&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Scr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Scr&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Kvartal&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;kvartal&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Integer&quot;,&quot;name&quot;:&quot;Del&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Del&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Shape_STAr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Shape_STAr&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Shape_STLe&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Shape_STLe&quot;,&quot;type&quot;:&quot;AsIs&quot;}}],&quot;schemaName&quot;:&quot;zouit_kpt&quot;,&quot;srs&quot;:314314,&quot;workTableName&quot;:&quot;zouit_kpt&quot;},{&quot;layerName&quot;:&quot;oks_polyline6&quot;,&quot;pairs&quot;:[{&quot;source&quot;:{&quot;binding&quot;:&quot;org.locationtech.jts.geom.MultiLineString&quot;,&quot;name&quot;:&quot;the_geom&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;shape&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;CAD_NUM&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;cad_num&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;TypeOTI&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;TypeOTI&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Assignatio&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Assignation_Name&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Note&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Note&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Area&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Area&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;Doc_Date&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_Date&quot;,&quot;type&quot;:&quot;FromSchema&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Doc_Number&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_Number&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Doc_Organi&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_Organi&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.sql.Timestamp&quot;,&quot;name&quot;:&quot;DateUpload&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;DateUpload&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Scr&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Scr&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Cadastral_&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Cadastral_&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Apartment&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Apartment&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;City_Name&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;City_Name&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;City_Type&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;City_Type&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;District_N&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;District_N&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Locality_N&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Locality_N&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Other&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Other&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Region&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Region&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Soviet_Vil&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Soviet_Vil&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Street_Typ&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Street_Typ&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Street&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Street&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Assignat_1&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Assignat_1&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Key_Parame&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Key_Parame&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Key_Para_1&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Key_Para_1&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;State&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;State&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.String&quot;,&quot;name&quot;:&quot;Doc_FIO&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Doc_FIO&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Integer&quot;,&quot;name&quot;:&quot;Del&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Del&quot;,&quot;type&quot;:&quot;AsIs&quot;}},{&quot;source&quot;:{&quot;binding&quot;:&quot;java.lang.Double&quot;,&quot;name&quot;:&quot;Shape_STLe&quot;},&quot;target&quot;:{&quot;name&quot;:&quot;Shape_STLe&quot;,&quot;type&quot;:&quot;AsIs&quot;}}],&quot;schemaName&quot;:&quot;oks_polyline&quot;,&quot;srs&quot;:314314,&quot;workTableName&quot;:&quot;oks_polyline&quot;}],&quot;targetSchema&quot;:&quot;workspace_${project_id}&quot;,&quot;wsUiId&quot;:&quot;fl28k0&quot;}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/api/${project_id}/import</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Connection" elementType="Header">
                        <stringProp name="Header.name">Connection</stringProp>
                        <stringProp name="Header.value">keep-alive</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Host" elementType="Header">
                        <stringProp name="Header.name">Host</stringProp>
                        <stringProp name="Header.value">${site}:8100</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36</stringProp>
                      </elementProp>
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="importTaskStatus" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">importTask_id</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                    <stringProp name="JSONPostProcessor.defaultValues">noImportstate</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
                <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While Controller" enabled="true">
                  <stringProp name="WhileController.condition">${__javaScript(&quot;${importTask_status}&quot;!=&quot;DONE&quot;)}</stringProp>
                </WhileController>
                <hashTree>
                  <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetStatusImportTask_SHP" enabled="true">
                    <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                    <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                      <collectionProp name="Arguments.arguments">
                        <elementProp name="" elementType="HTTPArgument">
                          <boolProp name="HTTPArgument.always_encode">false</boolProp>
                          <stringProp name="Argument.value">{}</stringProp>
                          <stringProp name="Argument.metadata">=</stringProp>
                        </elementProp>
                      </collectionProp>
                    </elementProp>
                    <stringProp name="HTTPSampler.domain">${site}</stringProp>
                    <stringProp name="HTTPSampler.port">8100</stringProp>
                    <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                    <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                    <stringProp name="HTTPSampler.path">/processes/${importTask_id}</stringProp>
                    <stringProp name="HTTPSampler.method">GET</stringProp>
                    <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                    <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                    <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                    <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                    <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                    <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                    <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  </HTTPSamplerProxy>
                  <hashTree>
                    <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                      <collectionProp name="HeaderManager.headers">
                        <elementProp name="Accept" elementType="Header">
                          <stringProp name="Header.name">Accept</stringProp>
                          <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Encoding" elementType="Header">
                          <stringProp name="Header.name">Accept-Encoding</stringProp>
                          <stringProp name="Header.value">gzip, deflate</stringProp>
                        </elementProp>
                        <elementProp name="Accept-Language" elementType="Header">
                          <stringProp name="Header.name">Accept-Language</stringProp>
                          <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                        </elementProp>
                        <elementProp name="Connection" elementType="Header">
                          <stringProp name="Header.name">Connection</stringProp>
                          <stringProp name="Header.value">keep-alive</stringProp>
                        </elementProp>
                        <elementProp name="Content-Type" elementType="Header">
                          <stringProp name="Header.name">Content-Type</stringProp>
                          <stringProp name="Header.value">application/json</stringProp>
                        </elementProp>
                        <elementProp name="Host" elementType="Header">
                          <stringProp name="Header.name">Host</stringProp>
                          <stringProp name="Header.value">${site}:8100</stringProp>
                        </elementProp>
                        <elementProp name="Origin" elementType="Header">
                          <stringProp name="Header.name">Origin</stringProp>
                          <stringProp name="Header.value">${scheme}://${site}</stringProp>
                        </elementProp>
                        <elementProp name="User-Agent" elementType="Header">
                          <stringProp name="Header.name">User-Agent</stringProp>
                          <stringProp name="Header.value">Jmeter test</stringProp>
                        </elementProp>
                        <elementProp name="Authorization" elementType="Header">
                          <stringProp name="Header.name">Authorization</stringProp>
                          <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                        </elementProp>
                      </collectionProp>
                    </HeaderManager>
                    <hashTree/>
                    <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="importTaskStatus_SHP" enabled="true">
                      <stringProp name="JSONPostProcessor.referenceNames">importTask_status</stringProp>
                      <stringProp name="JSONPostProcessor.jsonPathExprs">$.status</stringProp>
                      <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                      <stringProp name="JSONPostProcessor.defaultValues">noStatus</stringProp>
                    </JSONPostProcessor>
                    <hashTree/>
                    <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
                      <stringProp name="ConstantTimer.delay">5000</stringProp>
                    </ConstantTimer>
                    <hashTree/>
                  </hashTree>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="givePermToLayerSHP" enabled="false">
                  <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.value">{&#xd;
    &quot;role&quot;: &quot;CONTRIBUTOR&quot;,&#xd;
    &quot;principalType&quot;: &quot;group&quot;,&#xd;
    &quot;principalId&quot;: &quot;${group_id}&quot;&#xd;
}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain">${site}</stringProp>
                  <stringProp name="HTTPSampler.port">8100</stringProp>
                  <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                  <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                  <stringProp name="HTTPSampler.path">/api/data/datasets/workspace_${project_id}/tables/${shp_archive_name}/roleAssignment</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Authorization" elementType="Header">
                        <stringProp name="Header.name">Authorization</stringProp>
                        <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                      </elementProp>
                      <elementProp name="Origin" elementType="Header">
                        <stringProp name="Header.name">Origin</stringProp>
                        <stringProp name="Header.value">${scheme}://${site}</stringProp>
                      </elementProp>
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/json</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="NullStatusImportTask_zu" enabled="true">
                    <stringProp name="JSONPostProcessor.referenceNames">importTask_status</stringProp>
                    <stringProp name="JSONPostProcessor.jsonPathExprs"></stringProp>
                    <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                  </JSONPostProcessor>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--CreateUserController + CreateUserGroupContoller--" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createUser" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;name&quot;:&quot;Org${__threadNum}UserName${randomGUID}&quot;,&#xd;
	&quot;surName&quot;:&quot;Org${__threadNum}UserSurName${randomGUID}&quot;,&#xd;
	&quot;email&quot;:&quot;Org${__threadNum}UserEmail${randomGUID}@email.com&quot;,&#xd;
	&quot;password&quot;:&quot;testtestQ1&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${site}</stringProp>
                <stringProp name="HTTPSampler.port">8100</stringProp>
                <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/users</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${host}users</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://${site}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Jmeter test</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="userAddIdExtractor" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                  <stringProp name="RegexExtractor.refname">user_add_id</stringProp>
                  <stringProp name="RegexExtractor.regex">Location: .+/(\d+)</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">noUserAddId</stringProp>
                  <stringProp name="RegexExtractor.match_number"></stringProp>
                  <stringProp name="Sample.scope">all</stringProp>
                </RegexExtractor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49588">202</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createGroup" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
	&quot;name&quot;: &quot;Org${__threadNum}Group${randomGUID}&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${site}</stringProp>
                <stringProp name="HTTPSampler.port">8100</stringProp>
                <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/groups</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://${site}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Jmeter test</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="userGroupExtractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">group_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">noUserGroup</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49586">200</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="givePermToGroup" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;principalType&quot;: &quot;group&quot;,&#xd;
    &quot;principalId&quot;: ${group_id},&#xd;
    &quot;role&quot;: &quot;VIEWER&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${site}</stringProp>
                <stringProp name="HTTPSampler.port">8100</stringProp>
                <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">projects/${project_id}/permissions</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://${site}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Jmeter test</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="permissionIdExtractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">permission_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">noPermissionId</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="49587">201</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.custom_message"></stringProp>
                  <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">16</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addUserToGroup" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${site}</stringProp>
                <stringProp name="HTTPSampler.port">8100</stringProp>
                <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/groups/${group_id}/users/${user_add_id}</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://${site}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Jmeter test</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--RastrImportController--" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="createStorage" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;coverageStore&quot;: {&#xd;
    &quot;name&quot;: &quot;store_testSample&quot;,&#xd;
    &quot;workspace&quot;: &quot;workspace_${project_id}&quot;,&#xd;
    &quot;enabled&quot;: true,&#xd;
    &quot;type&quot;: &quot;GeoTIFF&quot;,&#xd;
    &quot;url&quot;: &quot;file:///opt/crg/spatial_data/testSamples/testSample.tif&quot;&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${site}</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">geoserver/rest/workspaces/workspace_${project_id}/coveragestores</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://${site}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Jmeter tets</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addStorageToProject" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;coverage&quot;: {&#xd;
    &quot;name&quot;: &quot;testSample&quot;,&#xd;
    &quot;title&quot;: &quot;testSample&quot;,&#xd;
    &quot;nativeCRS&quot;: &quot;28406&quot;,&#xd;
    &quot;srs&quot;: &quot;EPSG:28406&quot;&#xd;
  }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${site}</stringProp>
                <stringProp name="HTTPSampler.port">8080</stringProp>
                <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">geoserver/rest/workspaces/workspace_${project_id}/coveragestores/store_testSample/coverages</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://${site}</stringProp>
                    </elementProp>
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Jmeter tets</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="showRastrAsLayer" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
  &quot;internalName&quot;: &quot;testSample&quot;,&#xd;
  &quot;title&quot;: &quot;testSample&quot;,&#xd;
  &quot;nativeCRS&quot;: &quot;EPSG:28406&quot;,&#xd;
  &quot;srs&quot;: &quot;EPSG:28406&quot;,&#xd;
  &quot;schemaId&quot;: &quot;some&quot;,&#xd;
  &quot;dataStoreName&quot;: &quot;store_testSample&quot;,&#xd;
  &quot;type&quot;:&quot;raster&quot;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${site}</stringProp>
                <stringProp name="HTTPSampler.port">8100</stringProp>
                <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/projects/${project_id}/layers</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/json</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate, br</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">Connection</stringProp>
                      <stringProp name="Header.value">keep-alive</stringProp>
                    </elementProp>
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="layerIdExtractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">layer_id</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">noLayerId</stringProp>
                </JSONPostProcessor>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--Delete All Controller--" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /projects" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${site}</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/projects/?size=10000</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${site}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Jmeter test</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ProjectCountExtractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">projects</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.organizationId==${orgId})].id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">noProjects</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="DELETE PROJECTS (ALL) FOREACH" enabled="true">
            <stringProp name="ForeachController.inputVal">projects_</stringProp>
            <stringProp name="ForeachController.returnVal">project_counter</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${projects_matchNr}</stringProp>
            <stringProp name="TestPlan.comments">${projects_matchNr}</stringProp>
          </ForeachController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /projects" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${site}</stringProp>
              <stringProp name="HTTPSampler.port">8100</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/projects/${project_counter}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${site}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Jmeter test</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /users" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${site}</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/users?sort=id&amp;size=10000</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${site}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="UserCountExtractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">users</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..content..[1:]id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">noUsers</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="DELETE users (ALL) FOREACH" enabled="true">
            <stringProp name="ForeachController.inputVal">users_</stringProp>
            <stringProp name="ForeachController.returnVal">user_counter</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">1</stringProp>
            <stringProp name="ForeachController.endIndex">${users_matchNr}</stringProp>
          </ForeachController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /users" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${site}</stringProp>
              <stringProp name="HTTPSampler.port">8100</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/users/${user_counter}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${site}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /groups" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${site}</stringProp>
            <stringProp name="HTTPSampler.port">8100</stringProp>
            <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/groups/?size=10000</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">${scheme}://${site}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Connection" elementType="Header">
                  <stringProp name="Header.name">Connection</stringProp>
                  <stringProp name="Header.value">keep-alive</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GroupCountExtractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">groups</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$..content..[?(@.description)]id</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">-1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">noGroups</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="DELETE groups (ALL) FOREACH" enabled="true">
            <stringProp name="ForeachController.inputVal">groups_</stringProp>
            <stringProp name="ForeachController.returnVal">group_counter</stringProp>
            <boolProp name="ForeachController.useSeparator">false</boolProp>
            <stringProp name="ForeachController.startIndex">0</stringProp>
            <stringProp name="ForeachController.endIndex">${groups_matchNr}</stringProp>
          </ForeachController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /groups" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">${site}</stringProp>
              <stringProp name="HTTPSampler.port">8100</stringProp>
              <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/groups/${group_counter}</stringProp>
              <stringProp name="HTTPSampler.method">DELETE</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Authorization" elementType="Header">
                    <stringProp name="Header.name">Authorization</stringProp>
                    <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">${scheme}://${site}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                  </elementProp>
                  <elementProp name="Connection" elementType="Header">
                    <stringProp name="Header.name">Connection</stringProp>
                    <stringProp name="Header.value">keep-alive</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="[DEBUG] delete all" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>true</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Main Test Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">20</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Process" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--Controller--" enabled="true">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
            <boolProp name="TransactionController.parent">false</boolProp>
          </TransactionController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--GetToken Controller--" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getAdminToken" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="username" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">username</stringProp>
                      <stringProp name="Argument.value">TestOrgAdmin0@email.com</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="password" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">password</stringProp>
                      <stringProp name="Argument.value">testtestQ1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="grant_type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">grant_type</stringProp>
                      <stringProp name="Argument.value">password</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${site}</stringProp>
                <stringProp name="HTTPSampler.port">8100</stringProp>
                <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/oauth/token</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="accessTokenExtractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">access_token</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="Sample.scope">all</stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">noAdminToken</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${host}login</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://${site}</stringProp>
                    </elementProp>
                    <elementProp name="Content-type" elementType="Header">
                      <stringProp name="Header.name">Content-type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getOrgId" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments"/>
                </elementProp>
                <stringProp name="HTTPSampler.domain">${site}</stringProp>
                <stringProp name="HTTPSampler.port">8100</stringProp>
                <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/users/current</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="orgIdExtractor" enabled="true">
                  <stringProp name="JSONPostProcessor.referenceNames">orgId</stringProp>
                  <stringProp name="JSONPostProcessor.jsonPathExprs">$.orgId</stringProp>
                  <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                  <stringProp name="JSONPostProcessor.defaultValues">noOrgId</stringProp>
                </JSONPostProcessor>
                <hashTree/>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Authorization" elementType="Header">
                      <stringProp name="Header.name">Authorization</stringProp>
                      <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">${host}login</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                    </elementProp>
                    <elementProp name="Origin" elementType="Header">
                      <stringProp name="Header.name">Origin</stringProp>
                      <stringProp name="Header.value">${scheme}://${site}</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Jmeter test</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--CRUD Controller--" enabled="true">
              <boolProp name="TransactionController.includeTimers">false</boolProp>
              <boolProp name="TransactionController.parent">false</boolProp>
            </TransactionController>
            <hashTree>
              <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller 100" enabled="true">
                <boolProp name="LoopController.continue_forever">true</boolProp>
                <stringProp name="LoopController.loops">100</stringProp>
              </LoopController>
              <hashTree>
                <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="BBOX" enabled="false">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="minX" elementType="Argument">
                      <stringProp name="Argument.name">minX</stringProp>
                      <stringProp name="Argument.value">3761284.8619082794</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="minY" elementType="Argument">
                      <stringProp name="Argument.name">minY</stringProp>
                      <stringProp name="Argument.value">5523643.880807953</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="maxX" elementType="Argument">
                      <stringProp name="Argument.name">maxX</stringProp>
                      <stringProp name="Argument.value">3771413.920483715</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="maxY" elementType="Argument">
                      <stringProp name="Argument.name">maxY</stringProp>
                      <stringProp name="Argument.value">5532003.892227</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </Arguments>
                <hashTree/>
                <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters GUID" enabled="true">
                  <collectionProp name="UserParameters.names">
                    <stringProp name="115235276">randomGUID</stringProp>
                  </collectionProp>
                  <collectionProp name="UserParameters.thread_values">
                    <collectionProp name="681405977">
                      <stringProp name="118040362">${__UUID()}</stringProp>
                    </collectionProp>
                  </collectionProp>
                  <boolProp name="UserParameters.per_iteration">false</boolProp>
                </UserParameters>
                <hashTree/>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Prob 0.90 GET" enabled="true">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">90</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>90.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                    <intProp name="InterleaveControl.style">1</intProp>
                    <boolProp name="InterleaveControl.accrossThreads">true</boolProp>
                  </InterleaveControl>
                  <hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="--Map move Controller--" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
                        <stringProp name="scriptLanguage">java</stringProp>
                        <stringProp name="parameters"></stringProp>
                        <stringProp name="filename"></stringProp>
                        <stringProp name="cacheKey">true</stringProp>
                        <stringProp name="script">        import java.math.BigDecimal;
        
        BigDecimal minX = BigDecimal.valueOf(3885285.59731153);
        BigDecimal minY = BigDecimal.valueOf(5639469.33072018);
        BigDecimal maxX = BigDecimal.valueOf(3886380.80706326);
        BigDecimal maxY = BigDecimal.valueOf(5640787.079);

        int y = 0;
        int maxy = 25;
        int x = 0;
        int maxx = 25;

        BigDecimal RandomY = BigDecimal.valueOf((y + (int) (Math.random() * maxy)) * 1000);
        BigDecimal RandomX = BigDecimal.valueOf((x + (int) (Math.random() * maxx)) * 1000);
        
        minX = minX.add(RandomX);
        minY = minY.add(RandomY);
        maxX = maxX.add(RandomX);
        maxY = maxY.add(RandomY);

        vars.put(&quot;minX&quot;, minX.toString());
        vars.put(&quot;minY&quot;, minY.toString());
        vars.put(&quot;maxX&quot;, maxX.toString());
        vars.put(&quot;maxY&quot;, maxY.toString());
</stringProp>
                      </JSR223PreProcessor>
                      <hashTree/>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /projects" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/projects/?size=10000</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Jmeter test</stringProp>
                            </elementProp>
                            <elementProp name="Connection" elementType="Header">
                              <stringProp name="Header.name">Connection</stringProp>
                              <stringProp name="Header.value">keep-alive</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ProjectCountExtractor" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">projects</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.organizationId==${orgId})].id</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">noProjects</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="WMS check" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="SERVICE" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.value">WMS</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">SERVICE</stringProp>
                            </elementProp>
                            <elementProp name="VERSION" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.value">1.3.0</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">VERSION</stringProp>
                            </elementProp>
                            <elementProp name="REQUEST" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.value">GetMap</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">REQUEST</stringProp>
                            </elementProp>
                            <elementProp name="FORMAT" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.value">image/vnd.jpeg-png8</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">FORMAT</stringProp>
                            </elementProp>
                            <elementProp name="TRANSPARENT" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.value">true</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">TRANSPARENT</stringProp>
                            </elementProp>
                            <elementProp name="LAYERS" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">workspace_${projects}:oks_polyline,workspace_${projects}:zouit_kpt,workspace_${projects}:parcels_coordination,workspace_${projects}:kvartal_kpt,workspace_${projects}:zu,workspace_${projects}:oks,workspace_${projects}:border,workspace_${projects}:testSample</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">LAYERS</stringProp>
                            </elementProp>
                            <elementProp name="CRS" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">EPSG:3857</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">CRS</stringProp>
                            </elementProp>
                            <elementProp name="STYLES" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.value"></stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">STYLES</stringProp>
                            </elementProp>
                            <elementProp name="WIDTH" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.value">690</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">WIDTH</stringProp>
                            </elementProp>
                            <elementProp name="HEIGHT" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">true</boolProp>
                              <stringProp name="Argument.value">828</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">HEIGHT</stringProp>
                            </elementProp>
                            <elementProp name="BBOX" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">${minX},${minY},${maxX},${maxY}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                              <boolProp name="HTTPArgument.use_equals">true</boolProp>
                              <stringProp name="Argument.name">BBOX</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/geoserver/wms</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Jmeter test</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru,en-US;q=0.7,en;q=0.3</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">http://${site}</stringProp>
                            </elementProp>
                            <elementProp name="DNT" elementType="Header">
                              <stringProp name="Header.name">DNT</stringProp>
                              <stringProp name="Header.value">1</stringProp>
                            </elementProp>
                            <elementProp name="Connection" elementType="Header">
                              <stringProp name="Header.name">Connection</stringProp>
                              <stringProp name="Header.value">keep-alive</stringProp>
                            </elementProp>
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">http://${site}/projects/${project_id}/map</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="-638956796">is greater</stringProp>
                            <stringProp name="-563232825">LayerNotDefined</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">6</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                          <boolProp name="ResultCollector.error_logging">false</boolProp>
                          <objProp>
                            <name>saveConfig</name>
                            <value class="SampleSaveConfiguration">
                              <time>true</time>
                              <latency>true</latency>
                              <timestamp>true</timestamp>
                              <success>true</success>
                              <label>true</label>
                              <code>true</code>
                              <message>true</message>
                              <threadName>true</threadName>
                              <dataType>true</dataType>
                              <encoding>false</encoding>
                              <assertions>true</assertions>
                              <subresults>true</subresults>
                              <responseData>false</responseData>
                              <samplerData>false</samplerData>
                              <xml>false</xml>
                              <fieldNames>true</fieldNames>
                              <responseHeaders>false</responseHeaders>
                              <requestHeaders>false</requestHeaders>
                              <responseDataOnError>false</responseDataOnError>
                              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                              <assertionsResultsToSave>0</assertionsResultsToSave>
                              <bytes>true</bytes>
                              <sentBytes>true</sentBytes>
                              <url>true</url>
                              <threadCounts>true</threadCounts>
                              <idleTime>true</idleTime>
                              <connectTime>true</connectTime>
                            </value>
                          </objProp>
                          <stringProp name="filename"></stringProp>
                        </ResultCollector>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings"/>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_headers</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">16</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                      </hashTree>
                      <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
                        <boolProp name="displayJMeterProperties">false</boolProp>
                        <boolProp name="displayJMeterVariables">true</boolProp>
                        <boolProp name="displaySystemProperties">false</boolProp>
                      </DebugSampler>
                      <hashTree/>
                    </hashTree>
                    <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="GET Interleave Controller" enabled="true">
                      <intProp name="InterleaveControl.style">1</intProp>
                      <boolProp name="InterleaveControl.accrossThreads">true</boolProp>
                    </InterleaveControl>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /users sort" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/users?sort=id</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="TestPlan.comments">email,username,createdAt,surName,name,id</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="Connection" elementType="Header">
                              <stringProp name="Header.name">Connection</stringProp>
                              <stringProp name="Header.value">keep-alive</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /users sort" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/users?sort=email</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="TestPlan.comments">email,username,createdAt,surName,name,id</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="Connection" elementType="Header">
                              <stringProp name="Header.name">Connection</stringProp>
                              <stringProp name="Header.value">keep-alive</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /users sort" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/users?sort=username</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="TestPlan.comments">email,username,createdAt,surName,name,id</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="Connection" elementType="Header">
                              <stringProp name="Header.name">Connection</stringProp>
                              <stringProp name="Header.value">keep-alive</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /users sort" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/users?sort=createdAt</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="TestPlan.comments">email,username,createdAt,surName,name,id</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="Connection" elementType="Header">
                              <stringProp name="Header.name">Connection</stringProp>
                              <stringProp name="Header.value">keep-alive</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /users sort" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/users?sort=createdAt</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="TestPlan.comments">email,username,createdAt,surName,name,id</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="Connection" elementType="Header">
                              <stringProp name="Header.name">Connection</stringProp>
                              <stringProp name="Header.value">keep-alive</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /users sort" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/users?sort=name</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="TestPlan.comments">email,username,createdAt,surName,name,id</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                            </elementProp>
                            <elementProp name="Connection" elementType="Header">
                              <stringProp name="Header.name">Connection</stringProp>
                              <stringProp name="Header.value">keep-alive</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /projects" enabled="false">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${site}</stringProp>
                      <stringProp name="HTTPSampler.port">8100</stringProp>
                      <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                      <stringProp name="HTTPSampler.path">/projects</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="TestPlan.comments">email,username,createdAt,surName,name,id</stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Authorization" elementType="Header">
                            <stringProp name="Header.name">Authorization</stringProp>
                            <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">${scheme}://${site}</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="Connection" elementType="Header">
                            <stringProp name="Header.name">Connection</stringProp>
                            <stringProp name="Header.value">keep-alive</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                    <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /groups" enabled="true">
                      <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                        <collectionProp name="Arguments.arguments"/>
                      </elementProp>
                      <stringProp name="HTTPSampler.domain">${site}</stringProp>
                      <stringProp name="HTTPSampler.port">8100</stringProp>
                      <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                      <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                      <stringProp name="HTTPSampler.path">/groups</stringProp>
                      <stringProp name="HTTPSampler.method">GET</stringProp>
                      <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                      <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                      <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                      <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                      <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                      <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                      <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      <stringProp name="TestPlan.comments">email,username,createdAt,surName,name,id</stringProp>
                    </HTTPSamplerProxy>
                    <hashTree>
                      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                        <collectionProp name="HeaderManager.headers">
                          <elementProp name="Authorization" elementType="Header">
                            <stringProp name="Header.name">Authorization</stringProp>
                            <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Language" elementType="Header">
                            <stringProp name="Header.name">Accept-Language</stringProp>
                            <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                          </elementProp>
                          <elementProp name="Origin" elementType="Header">
                            <stringProp name="Header.name">Origin</stringProp>
                            <stringProp name="Header.value">${scheme}://${site}</stringProp>
                          </elementProp>
                          <elementProp name="Content-Type" elementType="Header">
                            <stringProp name="Header.name">Content-Type</stringProp>
                            <stringProp name="Header.value">application/json</stringProp>
                          </elementProp>
                          <elementProp name="Accept-Encoding" elementType="Header">
                            <stringProp name="Header.name">Accept-Encoding</stringProp>
                            <stringProp name="Header.value">gzip, deflate</stringProp>
                          </elementProp>
                          <elementProp name="Accept" elementType="Header">
                            <stringProp name="Header.name">Accept</stringProp>
                            <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                          </elementProp>
                          <elementProp name="User-Agent" elementType="Header">
                            <stringProp name="Header.name">User-Agent</stringProp>
                            <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                          </elementProp>
                          <elementProp name="Connection" elementType="Header">
                            <stringProp name="Header.name">Connection</stringProp>
                            <stringProp name="Header.value">keep-alive</stringProp>
                          </elementProp>
                        </collectionProp>
                      </HeaderManager>
                      <hashTree/>
                    </hashTree>
                  </hashTree>
                </hashTree>
                <ThroughputController guiclass="ThroughputControllerGui" testclass="ThroughputController" testname="Prob 0.10 ACTION" enabled="false">
                  <intProp name="ThroughputController.style">1</intProp>
                  <boolProp name="ThroughputController.perThread">true</boolProp>
                  <intProp name="ThroughputController.maxThroughput">10</intProp>
                  <FloatProperty>
                    <name>ThroughputController.percentThroughput</name>
                    <value>10.0</value>
                    <savedValue>0.0</savedValue>
                  </FloatProperty>
                </ThroughputController>
                <hashTree>
                  <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Interleave Controller" enabled="true">
                    <intProp name="InterleaveControl.style">0</intProp>
                    <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
                  </InterleaveControl>
                  <hashTree>
                    <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Random Create Controller" enabled="true">
                      <intProp name="InterleaveControl.style">1</intProp>
                      <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
                    </InterleaveControl>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /groups" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
	&quot;name&quot;: &quot;Org${__threadNum}Group${randomGUID}c&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/groups</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Jmeter test</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="userGroupExtractor" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">group_id</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">$.id</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">noUserGroup</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="49586">200</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">16</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /users" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&#xd;
	&quot;name&quot;:&quot;Org${__threadNum}UserName${randomGUID}c&quot;,&#xd;
	&quot;surName&quot;:&quot;Org${__threadNum}UserSurName${randomGUID}c&quot;,&#xd;
	&quot;email&quot;:&quot;Org${__threadNum}UserEmail${randomGUID}@email.comc&quot;,&#xd;
	&quot;password&quot;:&quot;testtestQ1&quot;&#xd;
}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/users</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">${host}users</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Jmeter test</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="userAddIdExtractor" enabled="true">
                          <stringProp name="RegexExtractor.useHeaders">true</stringProp>
                          <stringProp name="RegexExtractor.refname">user_add_id</stringProp>
                          <stringProp name="RegexExtractor.regex">Location: .+/(\d+)</stringProp>
                          <stringProp name="RegexExtractor.template">$1$</stringProp>
                          <stringProp name="RegexExtractor.default">noUserAddId</stringProp>
                          <stringProp name="RegexExtractor.match_number"></stringProp>
                          <stringProp name="Sample.scope">all</stringProp>
                        </RegexExtractor>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="49588">202</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">16</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /projects" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&quot;projectName&quot;:&quot;Org${__threadNum}Project${randomGUID}c&quot;}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/projects</stringProp>
                        <stringProp name="HTTPSampler.method">POST</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        <stringProp name="TestPlan.comments">${org_counter}</stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">${host}projects</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Jmeter test</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="id EXTRACTOR" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">project_id</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">$..id</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">noProjectId</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                        <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                          <collectionProp name="Asserion.test_strings">
                            <stringProp name="49587">201</stringProp>
                          </collectionProp>
                          <stringProp name="Assertion.custom_message"></stringProp>
                          <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
                          <boolProp name="Assertion.assume_success">false</boolProp>
                          <intProp name="Assertion.test_type">16</intProp>
                        </ResponseAssertion>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <InterleaveControl guiclass="InterleaveControlGui" testclass="InterleaveControl" testname="Random Delete Controller" enabled="true">
                      <intProp name="InterleaveControl.style">1</intProp>
                      <boolProp name="InterleaveControl.accrossThreads">false</boolProp>
                    </InterleaveControl>
                    <hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="delete project" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /projects" enabled="true">
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${site}</stringProp>
                          <stringProp name="HTTPSampler.port">8100</stringProp>
                          <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                          <stringProp name="HTTPSampler.path">/projects/</stringProp>
                          <stringProp name="HTTPSampler.method">GET</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Authorization" elementType="Header">
                                <stringProp name="Header.name">Authorization</stringProp>
                                <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Language" elementType="Header">
                                <stringProp name="Header.name">Accept-Language</stringProp>
                                <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                              </elementProp>
                              <elementProp name="Origin" elementType="Header">
                                <stringProp name="Header.name">Origin</stringProp>
                                <stringProp name="Header.value">${scheme}://${site}</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate</stringProp>
                              </elementProp>
                              <elementProp name="Accept" elementType="Header">
                                <stringProp name="Header.name">Accept</stringProp>
                                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                              </elementProp>
                              <elementProp name="User-Agent" elementType="Header">
                                <stringProp name="Header.name">User-Agent</stringProp>
                                <stringProp name="Header.value">Jmeter test</stringProp>
                              </elementProp>
                              <elementProp name="Connection" elementType="Header">
                                <stringProp name="Header.name">Connection</stringProp>
                                <stringProp name="Header.value">keep-alive</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ProjectCountExtractor" enabled="true">
                            <stringProp name="JSONPostProcessor.referenceNames">projects</stringProp>
                            <stringProp name="JSONPostProcessor.jsonPathExprs">$.content..id</stringProp>
                            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
                            <stringProp name="JSONPostProcessor.defaultValues">noProjects</stringProp>
                          </JSONPostProcessor>
                          <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /projects" enabled="true">
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${site}</stringProp>
                          <stringProp name="HTTPSampler.port">8100</stringProp>
                          <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                          <stringProp name="HTTPSampler.path">/projects/${projects}</stringProp>
                          <stringProp name="HTTPSampler.method">DELETE</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Authorization" elementType="Header">
                                <stringProp name="Header.name">Authorization</stringProp>
                                <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Language" elementType="Header">
                                <stringProp name="Header.name">Accept-Language</stringProp>
                                <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                              </elementProp>
                              <elementProp name="Origin" elementType="Header">
                                <stringProp name="Header.name">Origin</stringProp>
                                <stringProp name="Header.value">${scheme}://${site}</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate</stringProp>
                              </elementProp>
                              <elementProp name="Accept" elementType="Header">
                                <stringProp name="Header.name">Accept</stringProp>
                                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                              </elementProp>
                              <elementProp name="User-Agent" elementType="Header">
                                <stringProp name="Header.name">User-Agent</stringProp>
                                <stringProp name="Header.value">Jmeter test</stringProp>
                              </elementProp>
                              <elementProp name="Connection" elementType="Header">
                                <stringProp name="Header.name">Connection</stringProp>
                                <stringProp name="Header.value">keep-alive</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug delete project" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugSampler>
                        <hashTree/>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="delete user" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /users" enabled="true">
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${site}</stringProp>
                          <stringProp name="HTTPSampler.port">8100</stringProp>
                          <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                          <stringProp name="HTTPSampler.path">/users?sort=id</stringProp>
                          <stringProp name="HTTPSampler.method">GET</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Authorization" elementType="Header">
                                <stringProp name="Header.name">Authorization</stringProp>
                                <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Language" elementType="Header">
                                <stringProp name="Header.name">Accept-Language</stringProp>
                                <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                              </elementProp>
                              <elementProp name="Origin" elementType="Header">
                                <stringProp name="Header.name">Origin</stringProp>
                                <stringProp name="Header.value">${scheme}://${site}</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate</stringProp>
                              </elementProp>
                              <elementProp name="Accept" elementType="Header">
                                <stringProp name="Header.name">Accept</stringProp>
                                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                              </elementProp>
                              <elementProp name="User-Agent" elementType="Header">
                                <stringProp name="Header.name">User-Agent</stringProp>
                                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                              </elementProp>
                              <elementProp name="Connection" elementType="Header">
                                <stringProp name="Header.name">Connection</stringProp>
                                <stringProp name="Header.value">keep-alive</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="UserCountExtractor" enabled="true">
                            <stringProp name="JSONPostProcessor.referenceNames">users</stringProp>
                            <stringProp name="JSONPostProcessor.jsonPathExprs">$..content..id</stringProp>
                            <stringProp name="JSONPostProcessor.match_numbers">2</stringProp>
                            <stringProp name="JSONPostProcessor.defaultValues">noUsers</stringProp>
                          </JSONPostProcessor>
                          <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /users" enabled="true">
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${site}</stringProp>
                          <stringProp name="HTTPSampler.port">8100</stringProp>
                          <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                          <stringProp name="HTTPSampler.path">/users/${users}</stringProp>
                          <stringProp name="HTTPSampler.method">DELETE</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Authorization" elementType="Header">
                                <stringProp name="Header.name">Authorization</stringProp>
                                <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Language" elementType="Header">
                                <stringProp name="Header.name">Accept-Language</stringProp>
                                <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                              </elementProp>
                              <elementProp name="Origin" elementType="Header">
                                <stringProp name="Header.name">Origin</stringProp>
                                <stringProp name="Header.value">${scheme}://${site}</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate</stringProp>
                              </elementProp>
                              <elementProp name="Accept" elementType="Header">
                                <stringProp name="Header.name">Accept</stringProp>
                                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                              </elementProp>
                              <elementProp name="User-Agent" elementType="Header">
                                <stringProp name="Header.name">User-Agent</stringProp>
                                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                              </elementProp>
                              <elementProp name="Connection" elementType="Header">
                                <stringProp name="Header.name">Connection</stringProp>
                                <stringProp name="Header.value">keep-alive</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug delete user" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugSampler>
                        <hashTree/>
                      </hashTree>
                      <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="delete group + user" enabled="true">
                        <boolProp name="TransactionController.includeTimers">false</boolProp>
                        <boolProp name="TransactionController.parent">false</boolProp>
                      </TransactionController>
                      <hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /groups" enabled="true">
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${site}</stringProp>
                          <stringProp name="HTTPSampler.port">8100</stringProp>
                          <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                          <stringProp name="HTTPSampler.path">/groups/</stringProp>
                          <stringProp name="HTTPSampler.method">GET</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Authorization" elementType="Header">
                                <stringProp name="Header.name">Authorization</stringProp>
                                <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Language" elementType="Header">
                                <stringProp name="Header.name">Accept-Language</stringProp>
                                <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                              </elementProp>
                              <elementProp name="Origin" elementType="Header">
                                <stringProp name="Header.name">Origin</stringProp>
                                <stringProp name="Header.value">${scheme}://${site}</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate</stringProp>
                              </elementProp>
                              <elementProp name="Accept" elementType="Header">
                                <stringProp name="Header.name">Accept</stringProp>
                                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                              </elementProp>
                              <elementProp name="User-Agent" elementType="Header">
                                <stringProp name="Header.name">User-Agent</stringProp>
                                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                              </elementProp>
                              <elementProp name="Connection" elementType="Header">
                                <stringProp name="Header.name">Connection</stringProp>
                                <stringProp name="Header.value">keep-alive</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="GroupCountExtractor" enabled="true">
                            <stringProp name="JSONPostProcessor.referenceNames">groups</stringProp>
                            <stringProp name="JSONPostProcessor.jsonPathExprs">$..content..[?(@.description)]id</stringProp>
                            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
                            <stringProp name="JSONPostProcessor.defaultValues">noGroups</stringProp>
                          </JSONPostProcessor>
                          <hashTree/>
                        </hashTree>
                        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="DELETE /groups" enabled="true">
                          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                            <collectionProp name="Arguments.arguments"/>
                          </elementProp>
                          <stringProp name="HTTPSampler.domain">${site}</stringProp>
                          <stringProp name="HTTPSampler.port">8100</stringProp>
                          <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                          <stringProp name="HTTPSampler.path">/groups/${groups}</stringProp>
                          <stringProp name="HTTPSampler.method">DELETE</stringProp>
                          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                          <stringProp name="HTTPSampler.response_timeout"></stringProp>
                        </HTTPSamplerProxy>
                        <hashTree>
                          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                            <collectionProp name="HeaderManager.headers">
                              <elementProp name="Authorization" elementType="Header">
                                <stringProp name="Header.name">Authorization</stringProp>
                                <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Language" elementType="Header">
                                <stringProp name="Header.name">Accept-Language</stringProp>
                                <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                              </elementProp>
                              <elementProp name="Origin" elementType="Header">
                                <stringProp name="Header.name">Origin</stringProp>
                                <stringProp name="Header.value">${scheme}://${site}</stringProp>
                              </elementProp>
                              <elementProp name="Content-Type" elementType="Header">
                                <stringProp name="Header.name">Content-Type</stringProp>
                                <stringProp name="Header.value">application/json</stringProp>
                              </elementProp>
                              <elementProp name="Accept-Encoding" elementType="Header">
                                <stringProp name="Header.name">Accept-Encoding</stringProp>
                                <stringProp name="Header.value">gzip, deflate</stringProp>
                              </elementProp>
                              <elementProp name="Accept" elementType="Header">
                                <stringProp name="Header.name">Accept</stringProp>
                                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                              </elementProp>
                              <elementProp name="User-Agent" elementType="Header">
                                <stringProp name="Header.name">User-Agent</stringProp>
                                <stringProp name="Header.value">Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36</stringProp>
                              </elementProp>
                              <elementProp name="Connection" elementType="Header">
                                <stringProp name="Header.name">Connection</stringProp>
                                <stringProp name="Header.value">keep-alive</stringProp>
                              </elementProp>
                            </collectionProp>
                          </HeaderManager>
                          <hashTree/>
                        </hashTree>
                        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug delete group + user" enabled="true">
                          <boolProp name="displayJMeterProperties">false</boolProp>
                          <boolProp name="displayJMeterVariables">true</boolProp>
                          <boolProp name="displaySystemProperties">false</boolProp>
                        </DebugSampler>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                    <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction update Controller" enabled="true">
                      <boolProp name="TransactionController.includeTimers">false</boolProp>
                      <boolProp name="TransactionController.parent">false</boolProp>
                    </TransactionController>
                    <hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GET /projects" enabled="true">
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                          <collectionProp name="Arguments.arguments"/>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/projects/</stringProp>
                        <stringProp name="HTTPSampler.method">GET</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Jmeter test</stringProp>
                            </elementProp>
                            <elementProp name="Connection" elementType="Header">
                              <stringProp name="Header.name">Connection</stringProp>
                              <stringProp name="Header.value">keep-alive</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                        <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ProjectCountExtractor" enabled="true">
                          <stringProp name="JSONPostProcessor.referenceNames">projects</stringProp>
                          <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.organizationId==${orgId})].id</stringProp>
                          <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
                          <stringProp name="JSONPostProcessor.defaultValues">noProjects</stringProp>
                        </JSONPostProcessor>
                        <hashTree/>
                      </hashTree>
                      <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PUT /projects" enabled="true">
                        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                          <collectionProp name="Arguments.arguments">
                            <elementProp name="" elementType="HTTPArgument">
                              <boolProp name="HTTPArgument.always_encode">false</boolProp>
                              <stringProp name="Argument.value">{&quot;projectName&quot;:&quot;Org${org_counter}Project-${randomGUID}-u&quot;}</stringProp>
                              <stringProp name="Argument.metadata">=</stringProp>
                            </elementProp>
                          </collectionProp>
                        </elementProp>
                        <stringProp name="HTTPSampler.domain">${site}</stringProp>
                        <stringProp name="HTTPSampler.port">8100</stringProp>
                        <stringProp name="HTTPSampler.protocol">${scheme}</stringProp>
                        <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                        <stringProp name="HTTPSampler.path">/projects/${projects}</stringProp>
                        <stringProp name="HTTPSampler.method">PUT</stringProp>
                        <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                        <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                        <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                        <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                        <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                        <stringProp name="HTTPSampler.response_timeout"></stringProp>
                      </HTTPSamplerProxy>
                      <hashTree>
                        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                          <collectionProp name="HeaderManager.headers">
                            <elementProp name="Authorization" elementType="Header">
                              <stringProp name="Header.name">Authorization</stringProp>
                              <stringProp name="Header.value">Bearer ${access_token}</stringProp>
                            </elementProp>
                            <elementProp name="Referer" elementType="Header">
                              <stringProp name="Header.name">Referer</stringProp>
                              <stringProp name="Header.value">${host}projects</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Language" elementType="Header">
                              <stringProp name="Header.name">Accept-Language</stringProp>
                              <stringProp name="Header.value">ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7</stringProp>
                            </elementProp>
                            <elementProp name="Origin" elementType="Header">
                              <stringProp name="Header.name">Origin</stringProp>
                              <stringProp name="Header.value">${scheme}://${site}</stringProp>
                            </elementProp>
                            <elementProp name="Content-Type" elementType="Header">
                              <stringProp name="Header.name">Content-Type</stringProp>
                              <stringProp name="Header.value">application/json</stringProp>
                            </elementProp>
                            <elementProp name="Accept-Encoding" elementType="Header">
                              <stringProp name="Header.name">Accept-Encoding</stringProp>
                              <stringProp name="Header.value">gzip, deflate</stringProp>
                            </elementProp>
                            <elementProp name="Accept" elementType="Header">
                              <stringProp name="Header.name">Accept</stringProp>
                              <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                            </elementProp>
                            <elementProp name="User-Agent" elementType="Header">
                              <stringProp name="Header.name">User-Agent</stringProp>
                              <stringProp name="Header.value">Jmeter test</stringProp>
                            </elementProp>
                          </collectionProp>
                        </HeaderManager>
                        <hashTree/>
                      </hashTree>
                    </hashTree>
                  </hashTree>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>true</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">true</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
